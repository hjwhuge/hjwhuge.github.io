import{r as e,o as t,a as p,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h3",{id:"\u9898\u76EE-\u5220\u9664\u94FE\u8868\u5012\u6570\u7B2C-n-\u4E2A\u7ED3\u70B9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u5220\u9664\u94FE\u8868\u5012\u6570\u7B2C-n-\u4E2A\u7ED3\u70B9","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u5220\u9664\u94FE\u8868\u5012\u6570\u7B2C n \u4E2A\u7ED3\u70B9")],-1),k={href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode 19"),m=l(`<p>\u7ED9\u4F60\u4E00\u4E2A\u94FE\u8868\uFF0C\u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C n \u4E2A\u7ED3\u70B9\uFF0C\u5E76\u4E14\u8FD4\u56DE\u94FE\u8868\u7684\u5934\u7ED3\u70B9\u3002</p><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><ul><li>\u601D\u8DEF\u4E00\uFF1A\u904D\u5386\u94FE\u8868\uFF0C\u8BA1\u7B97\u51FA\u94FE\u8868\u603B\u957F\u5EA6 k\uFF0C\u518D\u6B21\u904D\u5386\u94FE\u8868\uFF0C\u5230\u8FBE\u5012\u6570\u7B2C n \u4E2A\u8282\u70B9\u8FD4\u56DE <ul><li>\u5012\u6570\u7B2C n \u4E2A\u5373\u4E3A\u6B63\u6570\u7B2C k - n + 1 \u4E2A</li></ul></li><li>\u601D\u8DEF\u4E8C\uFF1A\u53EA\u904D\u5386\u4E00\u6B21\uFF0C\u91C7\u7528\u4E24\u4E2A\u6307\u9488\uFF0C\u7B2C\u4E00\u4E2A\u6307\u9488\u5148\u8D70 n \u6B65\uFF0C\u7136\u540E\u548C\u7B2C\u4E8C\u4E2A\u6307\u9488\u4E00\u8D77\uFF0C\u4E00\u6B21\u8D70\u4E00\u6B65\uFF0C\u5F53\u7B2C\u4E00\u4E2A\u6307\u9488\u8D70\u5230\u6700\u540E\u65F6\uFF0C\u7B2C\u4E8C\u4E2A\u6307\u9488\u4F4D\u7F6E\u5373\u4E3A\u5012\u6570\u7B2C n \u4E2A <ul><li>\u5F53\u4E00\u4E2A\u6307\u9488\u5904\u7406\u94FE\u8868\u8FC7\u4E8E\u9EBB\u70E6\uFF0C\u53EF\u4EE5\u8003\u8651\u91C7\u7528\u591A\u4E2A\u6307\u9488\u6765\u5B9E\u73B0</li></ul></li><li>\u601D\u8DEF\u4E09\uFF1A\u501F\u7528\u6808\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5728\u904D\u5386\u94FE\u8868\u7684\u540C\u65F6\u5C06\u6240\u6709\u8282\u70B9\u4F9D\u6B21\u5165\u6808\u3002\u6839\u636E\u6808\u300C\u5148\u8FDB\u540E\u51FA\u300D\u7684\u539F\u5219\uFF0C\u6211\u4EEC\u5F39\u51FA\u6808\u7684\u7B2C n \u4E2A\u8282\u70B9\u5C31\u662F\u9700\u8981\u5220\u9664\u7684\u8282\u70B9\uFF0C\u5E76\u4E14\u76EE\u524D\u6808\u9876\u7684\u8282\u70B9\u5C31\u662F\u5F85\u5220\u9664\u8282\u70B9\u7684\u524D\u9A71\u8282\u70B9\u3002</li></ul><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h4><p>\u54D1\u7ED3\u70B9\u7684\u4F7F\u7528\u5F88\u91CD\u8981</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">removeNthFromEnd</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8BB0\u5F97\u4F7F\u7528\u54D1\u7ED3\u70B9\u6765\u7B80\u5316\u64CD\u4F5C\uFF0C\u5426\u5219\u4F1A\u6709\u5F88\u591A\u8FB9\u754C\u60C5\u51B5\u9700\u8981\u5224\u65AD</span>
  <span class="token keyword">const</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> first <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">let</span> second <span class="token operator">=</span> dummy<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    first <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    first <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    second <span class="token operator">=</span> second<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  second<span class="token punctuation">.</span>next <span class="token operator">=</span> second<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token keyword">return</span> dummy<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,7);function b(h,f){const a=e("ExternalLinkIcon");return t(),p(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),m],64)}var v=r(u,[["render",b]]);export{v as default};
