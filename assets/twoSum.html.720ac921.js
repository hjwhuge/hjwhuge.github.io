import{r as t,o as p,a as e,b as n,e as o,F as c,d as a,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h3",{id:"\u9898\u76EE-\u4E24\u6570\u4E4B\u548C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u4E24\u6570\u4E4B\u548C","aria-hidden":"true"},"#"),a(" \u9898\u76EE - \u4E24\u6570\u4E4B\u548C")],-1),k={href:"https://leetcode-cn.com/problems/two-sum/",target:"_blank",rel:"noopener noreferrer"},d=a("leetcode 1"),m=l(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u6574\u6570\u76EE\u6807\u503C target\uFF0C\u8BF7\u4F60\u5728\u8BE5\u6570\u7EC4\u4E2D\u627E\u51FA \u548C\u4E3A\u76EE\u6807\u503C target \u7684\u90A3 \u4E24\u4E2A \u6574\u6570\uFF0C\u5E76\u8FD4\u56DE\u5B83\u4EEC\u7684\u6570\u7EC4\u4E0B\u6807\u3002</p><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><p>\u65B9\u6CD5\u4E00\uFF1A\u66B4\u529B\u7834\u89E3</p><ul><li>\u4E24\u5C42\u904D\u5386\uFF0C\u627E\u5230\u7B26\u5408\u8981\u6C42\u7684\u7B54\u6848\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6 o(n\xB2)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A o(1)</li></ul><p>\u65B9\u6CD5\u4E8C\uFF1A\u54C8\u5E0C\u8868</p><ul><li>\u901A\u8FC7\u4E00\u4E2A\u54C8\u5E0C\u8868\uFF0C\u7B80\u5316\u67E5\u8BE2 target numsp[i]\u7684\u67E5\u8BE2\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6 o(n)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A o(n)</li></ul><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u54C8\u5E0C\u8868\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u8868\u5B9E\u73B0" aria-hidden="true">#</a> \u54C8\u5E0C\u8868\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,9);function h(b,f){const s=t("ExternalLinkIcon");return p(),e(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,o(s)])])]),m],64)}var w=u(r,[["render",h]]);export{w as default};
