import{r as p,o as e,a as t,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h3",{id:"\u9898\u76EE-\u6C42\u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u6C42\u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u6C42\u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9")],-1),k={href:"https://leetcode-cn.com/problems/middle-of-the-linked-list/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode 876"),b=l(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u5934\u7ED3\u70B9\u4E3A head \u7684\u975E\u7A7A\u5355\u94FE\u8868\uFF0C\u8FD4\u56DE\u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9\u3002</p><p>\u5982\u679C\u6709\u4E24\u4E2A\u4E2D\u95F4\u7ED3\u70B9\uFF0C\u5219\u8FD4\u56DE\u7B2C\u4E8C\u4E2A\u4E2D\u95F4\u7ED3\u70B9\u3002</p><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><ul><li>\u601D\u8DEF\u4E00\uFF1A\u904D\u5386\u94FE\u8868\uFF0C\u628A\u94FE\u8868\u7ED3\u70B9\u5B58\u5165\u6570\u7EC4\u4E2D\uFF0C\u6700\u540E\u67E5\u8BE2\u6570\u7EC4\u4E2D\u95F4\u7ED3\u70B9\u5373\u4E3A\u94FE\u8868\u4E2D\u95F4\u7ED3\u70B9</li><li>\u601D\u8DEF\u4E8C\uFF1A\u904D\u5386\u94FE\u8868\uFF0C\u8BA1\u7B97\u51FA\u94FE\u8868\u603B\u957F\u5EA6 N\uFF0C\u518D\u6B21\u904D\u5386\u94FE\u8868\uFF0C\u5230\u8FBE\u4E2D\u95F4\u7ED3\u70B9\u65F6\u8FD4\u56DE</li><li>\u601D\u8DEF\u4E09\uFF1A\u5FEB\u6162\u6307\u9488\uFF0C\u6162\u6307\u9488\u6BCF\u6B21\u8D70\u4E00\u6B65\uFF0C\u5FEB\u6307\u9488\u6BCF\u6B21\u8D70\u4E24\u6B65\uFF0C\u5F53\u5FEB\u6307\u9488\u8D70\u5230\u7EC8\u70B9\uFF0C\u6162\u6307\u9488\u5373\u4E3A\u4E2D\u95F4\u7ED3\u70B9</li></ul><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u501F\u7528\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u501F\u7528\u6570\u7EC4" aria-hidden="true">#</a> \u501F\u7528\u6570\u7EC4</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">middleNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u5148\u904D\u5386\u51FA\u94FE\u8868\u603B\u957F\u5EA6-\u7B2C\u4E8C\u6B21\u904D\u5386\u53D6\u5F97\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u5148\u904D\u5386\u51FA\u94FE\u8868\u603B\u957F\u5EA6-\u7B2C\u4E8C\u6B21\u904D\u5386\u53D6\u5F97\u7ED3\u679C" aria-hidden="true">#</a> \u5148\u904D\u5386\u51FA\u94FE\u8868\u603B\u957F\u5EA6\uFF0C\u7B2C\u4E8C\u6B21\u904D\u5386\u53D6\u5F97\u7ED3\u679C</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">middleNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// n \u7528\u4E8E\u8BB0\u5F55\u94FE\u8868\u603B\u957F\u5EA6</span>
  <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment">// m \u7B2C\u4E8C\u6B21\u5FAA\u73AF\u662F\u5426\u5230\u4E86\u94FE\u8868\u4E00\u534A</span>
  <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> cur <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    n<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u91CD\u7F6Ecur</span>
  cur <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6EE1\u8DB3\u6761\u4EF6\uFF0C\u8FD4\u56DE\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">===</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> cur<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    m<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h4 id="\u5FEB\u6162\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u6162\u6307\u9488" aria-hidden="true">#</a> \u5FEB\u6162\u6307\u9488</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">middleNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">let</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>fast <span class="token operator">&amp;&amp;</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> slow<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,11);function m(h,f){const a=p("ExternalLinkIcon");return e(),t(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),b],64)}var x=r(u,[["render",m]]);export{x as default};
