import{r as p,o as e,a as t,b as n,e as o,F as c,d as s,c as r}from"./app.72349eea.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h3",{id:"\u9898\u76EE-\u91CD\u5EFA\u4E8C\u53C9\u6811",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u91CD\u5EFA\u4E8C\u53C9\u6811","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u91CD\u5EFA\u4E8C\u53C9\u6811")],-1),k={href:"https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode 07"),m=r(`<p>\u9898\u76EE\u63CF\u8FF0</p><p>\u8F93\u5165\u67D0\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\uFF0C\u8BF7\u6784\u5EFA\u8BE5\u4E8C\u53C9\u6811\u5E76\u8FD4\u56DE\u5176\u6839\u8282\u70B9\u3002</p><p>\u5047\u8BBE\u8F93\u5165\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u4E2D\u90FD\u4E0D\u542B\u91CD\u590D\u7684\u6570\u5B57\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">Input</span><span class="token operator">:</span> <span class="token punctuation">(</span>preorder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>inorder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token literal-property property">Output</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token literal-property property">Input</span><span class="token operator">:</span> <span class="token punctuation">(</span>preorder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>inorder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token literal-property property">Output</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><ul><li>\u524D\u7F6E\u77E5\u8BC6 <ul><li>\u524D\u5E8F\u904D\u5386\uFF1A\u6839\u8282\u70B9\u3001\u5DE6\u8282\u70B9\u3001\u53F3\u8282\u70B9</li><li>\u4E2D\u5E8F\u904D\u5386\uFF1A\u5DE6\u8282\u70B9\u3001\u6839\u8282\u70B9\u3001\u53F3\u8282\u70B9</li><li>\u540E\u5E8F\u904D\u5386\uFF1A\u5DE6\u8282\u70B9\u3001\u53F3\u8282\u70B9\u3001\u6839\u8282\u70B9</li></ul></li><li>\u5B9E\u73B0\u601D\u8DEF <ul><li>\u901A\u8FC7\u524D\u5E8F\u904D\u5386\u83B7\u53D6\u6839\u8282\u70B9</li><li>\u5728\u4E2D\u5E8F\u904D\u5386\u4E2D\u5B9A\u4F4D\u6839\u8282\u70B9\uFF0C\u5373\u5F97\u5230\u5DE6\u53F3\u5B50\u6811\u8282\u70B9\u6570\u76EE <ul><li>\u53EF\u4EE5\u901A\u8FC7 hash \u8868\u63D0\u524D\u7F13\u5B58\u8282\u70B9\u4E0B\u6807</li></ul></li><li>\u6784\u9020\u6839\u8282\u70B9</li><li>\u9012\u5F52\u6784\u9020\u5DE6\u53F3\u5B50\u6811</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">buildTree</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">preorder<span class="token punctuation">,</span> inorder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6784\u9020\u54C8\u5E0C\u6620\u5C04\uFF0C\u7528\u4E8E\u5FEB\u901F\u5B9A\u4F4D\u4E2D\u5E8F\u904D\u5386\u4E2D\u7684\u6839\u8282\u70B9</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> inorder<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> indexMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    indexMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>inorder<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">myBuildTree</span><span class="token punctuation">(</span>preorder<span class="token punctuation">,</span> inorder<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">myBuildTree</span><span class="token punctuation">(</span>
    <span class="token parameter">preorder<span class="token punctuation">,</span>
    inorder<span class="token punctuation">,</span>
    preorder_left<span class="token punctuation">,</span>
    preorder_right<span class="token punctuation">,</span>
    inorder_left<span class="token punctuation">,</span>
    inorder_right</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>preorder_left <span class="token operator">&gt;</span> preorder_right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u524D\u5E8F\u904D\u5386\u4E2D\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\u5C31\u662F\u6839\u8282\u70B9</span>
    <span class="token keyword">const</span> preorder_root <span class="token operator">=</span> preorder_left<span class="token punctuation">;</span>
    <span class="token comment">// \u5728\u4E2D\u5E8F\u904D\u5386\u4E2D\u5B9A\u4F4D\u6839\u8282\u70B9\uFF0C\u5F97\u5230\u4E0B\u6807</span>
    <span class="token keyword">const</span> inorder_root <span class="token operator">=</span> indexMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>preorder<span class="token punctuation">[</span>preorder_root<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5148\u628A\u6839\u8282\u70B9\u5EFA\u7ACB\u51FA\u6765</span>
    <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>preorder<span class="token punctuation">[</span>preorder_root<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F97\u5230\u5DE6\u5B50\u6811\u4E2D\u7684\u8282\u70B9\u6570\u76EE</span>
    <span class="token keyword">const</span> size_left_subtree <span class="token operator">=</span> inorder_root <span class="token operator">-</span> inorder_left<span class="token punctuation">;</span>
    <span class="token comment">// \u9012\u5F52\u5730\u6784\u9020\u5DE6\u5B50\u6811\uFF0C\u5E76\u8FDE\u63A5\u5230\u6839\u8282\u70B9</span>
    <span class="token comment">// \u524D\u5E8F\u904D\u5386\u4E2D\u300C\u4ECE \u5DE6\u8FB9\u754C + 1 \u5F00\u59CB\u7684 size_left_subtree\u300D\u4E2A\u5143\u7D20\u5C31\u5BF9\u5E94\u4E86\u4E2D\u5E8F\u904D\u5386\u4E2D\u300C\u4ECE \u5DE6\u8FB9\u754C \u5F00\u59CB\u5230 \u6839\u8282\u70B9\u5B9A\u4F4D-1\u300D\u7684\u5143\u7D20</span>
    root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">myBuildTree</span><span class="token punctuation">(</span>
      preorder<span class="token punctuation">,</span>
      inorder<span class="token punctuation">,</span>
      preorder_left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
      preorder_left <span class="token operator">+</span> size_left_subtree<span class="token punctuation">,</span>
      inorder_left<span class="token punctuation">,</span>
      inorder_root <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9012\u5F52\u5730\u6784\u9020\u53F3\u5B50\u6811\uFF0C\u5E76\u8FDE\u63A5\u5230\u6839\u8282\u70B9</span>
    <span class="token comment">// \u524D\u5E8F\u904D\u5386\u4E2D\u300C\u4ECE \u5DE6\u8FB9\u754C + \u5DE6\u5B50\u6811\u8282\u70B9\u6570\u76EE + 1 \u5F00\u59CB\u5230 \u53F3\u8FB9\u754C\u300D\u7684\u5143\u7D20\u5C31\u5BF9\u5E94\u4E86\u4E2D\u5E8F\u904D\u5386\u4E2D\u300C\u4ECE \u6839\u8282\u70B9\u5B9A\u4F4D + 1 \u5230 \u53F3\u8FB9\u754C\u300D\u7684\u5143\u7D20</span>
    root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">myBuildTree</span><span class="token punctuation">(</span>
      preorder<span class="token punctuation">,</span>
      inorder<span class="token punctuation">,</span>
      preorder_left <span class="token operator">+</span> size_left_subtree <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
      preorder_right<span class="token punctuation">,</span>
      inorder_root <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
      inorder_right
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div>`,8);function d(_,f){const a=p("ExternalLinkIcon");return e(),t(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[b,o(a)])])]),m],64)}var w=l(u,[["render",d]]);export{w as default};
