import{r as p,o as t,a as e,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h3",{id:"\u9898\u76EE-\u6700\u5C0F\u7684-k-\u4E2A\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u6700\u5C0F\u7684-k-\u4E2A\u6570","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u6700\u5C0F\u7684 k \u4E2A\u6570")],-1),k={href:"https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode \u5251\u6307 offer 40"),d=l(`<p>\u8F93\u5165\u6574\u6570\u6570\u7EC4 arr \uFF0C\u627E\u51FA\u5176\u4E2D\u6700\u5C0F\u7684 k \u4E2A\u6570\u3002\u4F8B\u5982\uFF0C\u8F93\u5165 4\u30015\u30011\u30016\u30012\u30017\u30013\u30018 \u8FD9 8 \u4E2A\u6570\u5B57\uFF0C\u5219\u6700\u5C0F\u7684 4 \u4E2A\u6570\u5B57\u662F 1\u30012\u30013\u30014\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1Aarr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">2</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> \u6216\u8005 <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>

\u8F93\u5165\uFF1Aarr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">1</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><p>\u65B9\u6848\u4E00\uFF1A\u6392\u5E8F</p><ul><li><p>\u6392\u5E8F\u4E4B\u540E\u8FD4\u56DE\u6700\u5C0F\u7684 k \u4E2A\u6570</p></li><li><p>\u65F6\u95F4\u590D\u6742\u5EA6(o(nlogn))</p></li></ul><p>\u65B9\u6848\u4E8C\uFF1A\u5927\u9876\u5806</p><ul><li><p>\u904D\u5386\u524D k \u4E2A\u6570\uFF0C\u6784\u5EFA\u4E00\u4E2A\u5927\u9876\u5806</p></li><li><p>\u4ECE\u7B2C k \u4E2A\u6570\u5F00\u59CB\u904D\u5386\uFF0C\u548C\u5927\u9876\u5806\u7684\u6700\u5927\u503C\u8FDB\u884C\u6BD4\u8F83\uFF0C\u82E5\u6BD4\u6700\u5927\u503C\u5C0F\uFF0C\u4EA4\u6362\u4E24\u4E2A\u6570\u7684\u4F4D\u7F6E\uFF0C\u91CD\u65B0\u6784\u5EFA\u5927\u9876\u5806</p></li><li><p>\u7B2C\u4E8C\u6B21\u904D\u5386\u5B8C\u6210\u4E4B\u540E\uFF0C\u5927\u9876\u5806\u91CC\u7684\u6570\u5C31\u662F\u6574\u4E2A\u6570\u636E\u91CC\u6700\u5C0F\u7684 k \u4E2A\u6570\u3002</p></li><li><p>\u65F6\u95F4\u590D\u6742\u5EA6(o(nlogk))</p></li></ul><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u6392\u5E8F\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u5B9E\u73B0" aria-hidden="true">#</a> \u6392\u5E8F\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">getLeastNumbers</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u5806\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5806\u5B9E\u73B0" aria-hidden="true">#</a> \u5806\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">getLeastNumbers</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u524Dk\u4E2A\u6570\u5EFA\u7ACB\u5927\u9876\u5806</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>k <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">bubbleDown</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD\u540Ek\u4E2A\u6570\u4E2D\u662F\u5426\u6709\u66F4\u5C0F\u7684\u6570</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> k<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">bubbleDown</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">bubbleDown</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> index<span class="token punctuation">,</span> len</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7528\u4E8E\u5224\u65AD\u662F\u5426\u8FD8\u6709\u5B50\u8282\u70B9</span>
  <span class="token keyword">const</span> lastIndex <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> leftIndex <span class="token operator">=</span> index <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rightIndex <span class="token operator">=</span> index <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528\u4E8E\u548C\u5B50\u8282\u70B9\u6BD4\u8F83</span>
    <span class="token keyword">let</span> findIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftIndex <span class="token operator">&lt;=</span> lastIndex <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>leftIndex<span class="token punctuation">]</span> <span class="token operator">-</span> array<span class="token punctuation">[</span>findIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      findIndex <span class="token operator">=</span> leftIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rightIndex <span class="token operator">&lt;=</span> lastIndex <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>rightIndex<span class="token punctuation">]</span> <span class="token operator">-</span> array<span class="token punctuation">[</span>findIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      findIndex <span class="token operator">=</span> rightIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!==</span> findIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>findIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>findIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      index <span class="token operator">=</span> findIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>`,13);function m(f,h){const a=p("ExternalLinkIcon");return t(),e(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[b,o(a)])])]),d],64)}var g=u(r,[["render",m]]);export{g as default};
