import{r as p,o as t,a as o,b as n,e,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h3",{id:"\u9898\u76EE-\u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\u7B2C-k-\u5C0F\u7684\u5143\u7D20",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\u7B2C-k-\u5C0F\u7684\u5143\u7D20","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\u7B2C K \u5C0F\u7684\u5143\u7D20")],-1),k={href:"https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode 230"),m=l(`<p>\u9898\u76EE\u63CF\u8FF0</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u6839\u8282\u70B9 root \uFF0C\u548C\u4E00\u4E2A\u6574\u6570 k \uFF0C\u8BF7\u4F60\u8BBE\u8BA1\u4E00\u4E2A\u7B97\u6CD5\u67E5\u627E\u5176\u4E2D\u7B2C k \u4E2A\u6700\u5C0F\u5143\u7D20\uFF08\u4ECE 1 \u5F00\u59CB\u8BA1\u6570\uFF09\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1Aroot <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">1</span>
\u8F93\u51FA\uFF1A<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u4E2D\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u4E2D\u5E8F\u904D\u5386</h4><ul><li>\u4E2D\u5E8F\u904D\u5386\uFF1A\u5BF9\u4E8E\u6811\u4E2D\u7684\u4EFB\u610F\u8282\u70B9\u6765\u8BF4\uFF0C\u5148\u6253\u5370\u5B83\u7684\u5DE6\u5B50\u8282\u70B9\uFF0C\u7136\u540E\u518D\u6253\u5370\u5B83\u672C\u8EAB\uFF0C\u6700\u540E\u6253\u5370\u5B83\u7684\u53F3\u5B50\u8282\u70B9\u3002</li><li>\u4E8C\u53C9\u641C\u7D22\u6811\uFF1A\u5728\u6811\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u8282\u70B9\uFF0C\u5176\u5DE6\u5B50\u6811\u4E2D\u7684\u6BCF\u4E2A\u8282\u70B9\u7684\u503C\uFF0C\u90FD\u8981\u5C0F\u4E8E\u8FD9\u4E2A\u8282\u70B9\u7684\u503C\uFF0C\u800C\u53F3\u5B50\u6811\u8282\u70B9\u7684\u503C\u90FD\u5927\u4E8E\u8FD9\u4E2A\u8282\u70B9\u7684\u503C\u3002</li><li>\u7EFC\u548C\u5F97\u51FA\uFF1A\u901A\u8FC7\u4E2D\u5E8F\u904D\u5386\uFF0C\u5F97\u5230\u4E00\u4E2A\u4ECE\u5C0F\u5230\u5927\u6709\u5E8F\u6570\u636E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9012\u5F52\u7248\u672C</span>
<span class="token keyword">var</span> <span class="token function-variable function">kthSmallest</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">inorderTraversal</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">[</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">inorderTraversal</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">inorderTraversal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">;</span>
      array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">inorderTraversal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FED\u4EE3\u7248\u672C</span>
<span class="token keyword">var</span> <span class="token function-variable function">kthSmallest</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>root <span class="token operator">||</span> stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
      root <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    root <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    k<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    root <span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> root<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,8);function d(h,f){const a=p("ExternalLinkIcon");return t(),o(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[b,e(a)])])]),m],64)}var _=u(r,[["render",d]]);export{_ as default};
