import{r as p,o as t,a as o,b as n,e,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=n("h3",{id:"\u9898\u76EE-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4")],-1),i={href:"https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode \u5251\u6307 offer 13"),m=l(`<h4 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h4><p>\u5730\u4E0A\u6709\u4E00\u4E2A m \u884C n \u5217\u7684\u65B9\u683C\uFF0C\u4ECE\u5750\u6807 [0,0] \u5230\u5750\u6807 [m-1,n-1] \u3002\u4E00\u4E2A\u673A\u5668\u4EBA\u4ECE\u5750\u6807 [0, 0] \u7684\u683C\u5B50\u5F00\u59CB\u79FB\u52A8\uFF0C\u5B83\u6BCF\u6B21\u53EF\u4EE5\u5411\u5DE6\u3001\u53F3\u3001\u4E0A\u3001\u4E0B\u79FB\u52A8\u4E00\u683C\uFF08\u4E0D\u80FD\u79FB\u52A8\u5230\u65B9\u683C\u5916\uFF09\uFF0C\u4E5F\u4E0D\u80FD\u8FDB\u5165\u884C\u5750\u6807\u548C\u5217\u5750\u6807\u7684\u6570\u4F4D\u4E4B\u548C\u5927\u4E8E k \u7684\u683C\u5B50\u3002\u4F8B\u5982\uFF0C\u5F53 k \u4E3A 18 \u65F6\uFF0C\u673A\u5668\u4EBA\u80FD\u591F\u8FDB\u5165\u65B9\u683C [35, 37] \uFF0C\u56E0\u4E3A 3+5+3+7=18\u3002\u4F46\u5B83\u4E0D\u80FD\u8FDB\u5165\u65B9\u683C [35, 38]\uFF0C\u56E0\u4E3A 3+5+3+8=19\u3002\u8BF7\u95EE\u8BE5\u673A\u5668\u4EBA\u80FD\u591F\u5230\u8FBE\u591A\u5C11\u4E2A\u683C\u5B50\uFF1F</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1Am <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">1</span>
\u8F93\u51FA\uFF1A<span class="token number">3</span>

\u8F93\u5165\uFF1Am <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">0</span>
\u8F93\u51FA\uFF1A<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">movingCount</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FB9\u754C\u503C\u5224\u65AD</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> n <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> k <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>m <span class="token operator">*</span> n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">movingCountCore</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>

  <span class="token comment">// \u56DE\u6EAF\u4E3B\u51FD\u6570\uFF0C\u5224\u65AD\u5F53\u524D\u683C\u5B50\u662F\u5426\u6EE1\u8DB3\u8981\u6C42\uFF0C\u5982\u679C\u6EE1\u8DB3\uFF0C\u63A5\u7740\u5224\u65AD\u5468\u56F4\u56DB\u4E2A\u683C\u5B50\u7684\u60C5\u51B5</span>
  <span class="token keyword">function</span> <span class="token function">movingCountCore</span><span class="token punctuation">(</span><span class="token parameter">k<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">,</span> visited</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      visited<span class="token punctuation">[</span>row <span class="token operator">*</span> cols <span class="token operator">+</span> col<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      count <span class="token operator">=</span>
        <span class="token number">1</span> <span class="token operator">+</span>
        <span class="token function">movingCountCore</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> visited<span class="token punctuation">)</span> <span class="token operator">+</span>
        <span class="token function">movingCountCore</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> visited<span class="token punctuation">)</span> <span class="token operator">+</span>
        <span class="token function">movingCountCore</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> col<span class="token punctuation">,</span> visited<span class="token punctuation">)</span> <span class="token operator">+</span>
        <span class="token function">movingCountCore</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> row <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> col<span class="token punctuation">,</span> visited<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7528\u4E8E\u5224\u65AD\u5355\u524D\u4F4D\u7F6E\u662F\u5426\u6EE1\u8DB3\u9898\u610F</span>
  <span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token parameter">k<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cols<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">,</span> visited</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      row <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
      row <span class="token operator">&lt;</span> rows <span class="token operator">&amp;&amp;</span>
      col <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
      col <span class="token operator">&lt;</span> cols <span class="token operator">&amp;&amp;</span>
      <span class="token function">getDigitSum</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getDigitSum</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> k <span class="token operator">&amp;&amp;</span>
      <span class="token operator">!</span>visited<span class="token punctuation">[</span>row <span class="token operator">*</span> cols <span class="token operator">+</span> col<span class="token punctuation">]</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//   \u7528\u4E8E\u8BA1\u7B97\u5F53\u524D\u683C\u5B50\u7684\u4F4D\u6570\u548C;</span>
  <span class="token keyword">function</span> <span class="token function">getDigitSum</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
      num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span>num <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div>`,6);function d(w,f){const a=p("ExternalLinkIcon");return t(),o(c,null,[k,n("blockquote",null,[n("p",null,[n("a",i,[b,e(a)])])]),m],64)}var g=u(r,[["render",d]]);export{g as default};
