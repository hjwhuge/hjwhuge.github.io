import{r as p,o as t,a as o,b as n,e,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h3",{id:"\u9898\u76EE-\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811")],-1),k={href:"https://leetcode-cn.com/problems/validate-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode 98"),m=l(`<p>\u9898\u76EE\u63CF\u8FF0</p><p>\u793A\u4F8B\uFF1A\u7ED9\u4F60\u4E00\u4E2A\u4E8C\u53C9\u6811\u7684\u6839\u8282\u70B9 root \uFF0C\u5224\u65AD\u5176\u662F\u5426\u662F\u4E00\u4E2A\u6709\u6548\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002</p><p>\u6709\u6548 \u4E8C\u53C9\u641C\u7D22\u6811\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><ul><li>\u8282\u70B9\u7684\u5DE6\u5B50\u6811\u53EA\u5305\u542B \u5C0F\u4E8E \u5F53\u524D\u8282\u70B9\u7684\u6570\u3002</li><li>\u8282\u70B9\u7684\u53F3\u5B50\u6811\u53EA\u5305\u542B \u5927\u4E8E \u5F53\u524D\u8282\u70B9\u7684\u6570\u3002</li><li>\u6240\u6709\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u81EA\u8EAB\u5FC5\u987B\u4E5F\u662F\u4E8C\u53C9\u641C\u7D22\u6811\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1Aroot <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">true</span>
\u8F93\u5165\uFF1Aroot <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E8C\u53C9\u641C\u7D22\u6811\u5B9A\u4E49</p><ul><li>\u5982\u679C\u8BE5\u4E8C\u53C9\u6811\u7684\u5DE6\u5B50\u6811\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u5DE6\u5B50\u6811\u4E0A\u6240\u6709\u8282\u70B9\u7684\u503C\u5747\u5C0F\u4E8E\u5B83\u7684\u6839\u8282\u70B9\u7684\u503C\uFF1B \u82E5\u5B83\u7684\u53F3\u5B50\u6811\u4E0D\u7A7A\uFF0C\u5219\u53F3\u5B50\u6811\u4E0A\u6240\u6709\u8282\u70B9\u7684\u503C\u5747\u5927\u4E8E\u5B83\u7684\u6839\u8282\u70B9\u7684\u503C\uFF1B\u5B83\u7684\u5DE6\u53F3\u5B50\u6811\u4E5F\u4E3A\u4E8C\u53C9\u641C\u7D22\u6811</li></ul><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><p>\u9012\u5F52</p><blockquote><p>\u6839\u636E\u4E8C\u53C9\u641C\u7D22\u6811\u5B9A\u4E49\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u9012\u5F52\u51FD\u6570\uFF0C\u6BCF\u4E2A\u5B50\u8282\u70B9\u90FD\u5FC5\u987B\u5728\u4E00\u4E2A\u533A\u95F4\uFF08min\uFF0Cmax\uFF09\u4E4B\u95F4\uFF0C\u5728\u9012\u5F52\u5DE6\u5B50\u6811\u65F6\uFF0C\u56E0\u4E3A\u5DE6\u5B50\u6811\u8282\u70B9\u90FD\u5C0F\u4E8E\u6839\u8282\u70B9\uFF0C\u6240\u4EE5\u628A\u4E0A\u754C max \u6539\u4E3A root.val\uFF1B\u540C\u7406\u9012\u5F52\u53F3\u5B50\u6811\u65F6\uFF0C\u628A\u4E0B\u754C min \u6539\u4E3A root.val</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">helper</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> min <span class="token operator">||</span> root<span class="token punctuation">.</span>val <span class="token operator">&gt;=</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">helper</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> min<span class="token punctuation">,</span> root<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">helper</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> root<span class="token punctuation">.</span>val<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">isValidBST</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">helper</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E2D\u5E8F\u904D\u5386</p><blockquote><p>\u91C7\u7528\u4E2D\u5E8F\u904D\u5386\u7684\u7279\u6B8A\u6027\uFF0C\u904D\u5386\u4E4B\u540E\u7684\u5E8F\u5217\u662F\u5347\u5E8F\u7684\uFF0C\u5728\u4E2D\u5E8F\u904D\u5386\u7684\u65F6\u5019\u5B9E\u65F6\u68C0\u67E5\u5F53\u524D\u8282\u70B9\u7684\u503C\u662F\u5426\u5927\u4E8E\u524D\u4E00\u4E2A\u4E2D\u5E8F\u904D\u5386\u5230\u7684\u8282\u70B9\u7684\u503C\u5373\u53EF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isValidBST</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5B58\u653E\u4E0A\u4E00\u4E2A\u8282\u70B9\uFF0C\u521D\u59CB\u503C\u65E0\u7A77\u5C0F</span>
  <span class="token keyword">let</span> prev <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>root <span class="token operator">||</span> stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
      root <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    root <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6BCF\u6B21\u548C\u4E0A\u4E00\u4E2A\u8282\u70B9\u505A\u5224\u65AD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    prev <span class="token operator">=</span> root<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    root <span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,14);function d(v,f){const a=p("ExternalLinkIcon");return t(),o(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[b,e(a)])])]),m],64)}var w=u(r,[["render",d]]);export{w as default};
