import{r as p,o as e,a as t,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h3",{id:"\u9898\u76EE-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217")],-1),k={href:"https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode 33"),m=l(`<p>\u9898\u76EE\u63CF\u8FF0 \u8F93\u5165\u4E00\u4E2A\u6574\u6570\u6570\u7EC4\uFF0C\u5224\u65AD\u8BE5\u6570\u7EC4\u662F\u4E0D\u662F\u67D0\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u7ED3\u679C\u3002\u5982\u679C\u662F\u5219\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false\u3002\u5047\u8BBE\u8F93\u5165\u7684\u6570\u7EC4\u7684\u4EFB\u610F\u4E24\u4E2A\u6570\u5B57\u90FD\u4E92\u4E0D\u76F8\u540C\u3002 \u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u4E8C\u53C9\u6811\u5982\u4E0B\uFF1A
     <span class="token number">5</span>
    <span class="token operator">/</span> \\
   <span class="token number">2</span>   <span class="token number">6</span>
  <span class="token operator">/</span> \\
 <span class="token number">1</span>   <span class="token number">3</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token boolean">false</span>

<span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><ul><li>\u540E\u7EED\u904D\u5386\u6700\u540E\u4E00\u4E2A\u4E3A\u6839\u8282\u70B9</li><li>\u4E8C\u53C9\u641C\u7D22\u6811\u7279\u70B9\uFF1A\u6839\u8282\u70B9\u5927\u4E8E\u5DE6\u8282\u70B9\uFF0C\u5C0F\u4E8E\u53F3\u8282\u70B9</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">verifyPostorder</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">postorder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>postorder<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

  <span class="token comment">// \u83B7\u53D6\u6839\u8282\u70B9</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> postorder<span class="token punctuation">[</span>postorder<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> idx <span class="token operator">=</span> postorder<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&gt;</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u83B7\u53D6\u5DE6\u53F3\u5B50\u6811</span>
  <span class="token keyword">const</span> left <span class="token operator">=</span> postorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> right <span class="token operator">=</span> postorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> postorder<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5224\u65AD\u5DE6\u53F3\u5B50\u6811\u662F\u5426\u7B26\u5408\u8981\u6C42</span>
  <span class="token keyword">const</span> bLeft <span class="token operator">=</span> left<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&gt;</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bLeft<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> bRight <span class="token operator">=</span> right<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">&lt;</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bRight<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5224\u65AD\u5DE6\u53F3\u5B50\u6811\u662F\u5426\u7B26\u5408\u8981\u6C42</span>
  <span class="token keyword">return</span> <span class="token function">verifyPostorder</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">verifyPostorder</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,5);function d(f,h){const a=p("ExternalLinkIcon");return e(),t(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[b,o(a)])])]),m],64)}var _=r(u,[["render",d]]);export{_ as default};
