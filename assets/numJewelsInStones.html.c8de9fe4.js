import{r as e,o as p,a as t,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h3",{id:"\u9898\u76EE-\u5B9D\u77F3\u4E0E\u77F3\u5934",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u5B9D\u77F3\u4E0E\u77F3\u5934","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u5B9D\u77F3\u4E0E\u77F3\u5934")],-1),k={href:"https://leetcode-cn.com/problems/jewels-and-stones/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode 771"),m=l(`<p>\u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32 jewels\xA0 \u4EE3\u8868\u77F3\u5934\u4E2D\u5B9D\u77F3\u7684\u7C7B\u578B\uFF0C\u53E6\u6709\u4E00\u4E2A\u5B57\u7B26\u4E32 stones \u4EE3\u8868\u4F60\u62E5\u6709\u7684\u77F3\u5934\u3002\xA0stones\xA0 \u4E2D\u6BCF\u4E2A\u5B57\u7B26\u4EE3\u8868\u4E86\u4E00\u79CD\u4F60\u62E5\u6709\u7684\u77F3\u5934\u7684\u7C7B\u578B\uFF0C\u4F60\u60F3\u77E5\u9053\u4F60\u62E5\u6709\u7684\u77F3\u5934\u4E2D\u6709\u591A\u5C11\u662F\u5B9D\u77F3\u3002</p><p>\u5B57\u6BCD\u533A\u5206\u5927\u5C0F\u5199\uFF0C\u56E0\u6B64 &quot;a&quot; \u548C &quot;A&quot; \u662F\u4E0D\u540C\u7C7B\u578B\u7684\u77F3\u5934\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1Ajewels <span class="token operator">=</span> <span class="token string">&quot;aA&quot;</span><span class="token punctuation">,</span> stones <span class="token operator">=</span> <span class="token string">&quot;aAAbbbb&quot;</span>
\u8F93\u51FA\uFF1A<span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u793A\u4F8B 2\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1Ajewels <span class="token operator">=</span> <span class="token string">&quot;z&quot;</span><span class="token punctuation">,</span> stones <span class="token operator">=</span> <span class="token string">&quot;ZZ&quot;</span>
\u8F93\u51FA\uFF1A<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><p>\u4F7F\u7528 map \u8BB0\u5F55\u5B9D\u77F3\u7C7B\u578B\uFF0C\u904D\u5386\u77F3\u5934\uFF0C\u5982\u679C\u5B58\u5728\u4E8E map \u4E2D\u5B9D\u77F3\u6570\u91CF+1</p><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">numJewelsInStones</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">jewels<span class="token punctuation">,</span> stones</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> jewels<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> stones<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      num<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,10);function b(h,f){const a=e("ExternalLinkIcon");return p(),t(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),m],64)}var _=r(u,[["render",b]]);export{_ as default};
