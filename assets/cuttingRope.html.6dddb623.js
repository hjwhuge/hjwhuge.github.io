import{r as p,o as e,a as t,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},k=n("h3",{id:"\u9898\u76EE-\u526A\u7EF3\u5B50",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u526A\u7EF3\u5B50","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u526A\u7EF3\u5B50")],-1),i={href:"https://leetcode-cn.com/problems/jian-sheng-zi-lcof/",target:"_blank",rel:"noopener noreferrer"},m=s("leetcode \u5251\u6307 offer 14"),b=l(`<h4 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h4><p>\u7ED9\u4F60\u4E00\u6839\u957F\u5EA6\u4E3A n \u7684\u7EF3\u5B50\uFF0C\u8BF7\u628A\u7EF3\u5B50\u526A\u6210\u6574\u6570\u957F\u5EA6\u7684 m \u6BB5\uFF08m\u3001n \u90FD\u662F\u6574\u6570\uFF0Cn&gt;1 \u5E76\u4E14 m&gt;1\uFF09\uFF0C\u6BCF\u6BB5\u7EF3\u5B50\u7684\u957F\u5EA6\u8BB0\u4E3A k[0],k[1]...k[m-1] \u3002\u8BF7\u95EE k[0]<em>k[1]</em>...*k[m-1] \u53EF\u80FD\u7684\u6700\u5927\u4E58\u79EF\u662F\u591A\u5C11\uFF1F\u4F8B\u5982\uFF0C\u5F53\u7EF3\u5B50\u7684\u957F\u5EA6\u662F 8 \u65F6\uFF0C\u6211\u4EEC\u628A\u5B83\u526A\u6210\u957F\u5EA6\u5206\u522B\u4E3A 2\u30013\u30013 \u7684\u4E09\u6BB5\uFF0C\u6B64\u65F6\u5F97\u5230\u7684\u6700\u5927\u4E58\u79EF\u662F 18\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token number">10</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token number">36</span>
<span class="token literal-property property">\u89E3\u91CA</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span> \xD7 <span class="token number">3</span> \xD7 <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">36</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u52A8\u6001\u89C4\u5212\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212\u5B9E\u73B0" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\u5B9E\u73B0</h4><ul><li>\u72B6\u6001\u5B9A\u4E49\uFF1Adp[i]\uFF0C\u6BCF\u4E00\u4E2A\u5B50\u95EE\u9898\u7684\u6700\u4F18\u89E3 <ul><li>\u7B2C i \u4E2A\u5143\u7D20\u8868\u793A\u628A\u957F\u5EA6\u4E3A i \u7684\u7EF3\u5B50\u526A\u6210\u82E5\u5E72\u6BB5\u4E4B\u540E\u4E58\u79EF\u6700\u5927\u503C</li></ul></li><li>\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF1Af(n) = max(f(i) * f(n - i)) <ul><li>\u5176\u4E2D 0 &lt; i &lt; n</li></ul></li><li>\u5B9E\u73B0\u65B9\u5F0F\u4E5F\u662F\u4ECE\u4E0B\u5F80\u4E0A\u9012\u63A8</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">cuttingRope</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 2\u548C3\u76F4\u63A5\u8FD4\u56DE\u7ED3\u679C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token comment">// \u524D4\u4E2A\u4E0D\u6EE1\u8DB3dp[i]\u4E3A\u7B2Ci\u4E2A\u5143\u7D20\u4E58\u79EF\u6700\u5927\u503C\uFF0C\u53EA\u662F\u4E3A\u4E86\u65B9\u4FBF\u540E\u7EED\u8BA1\u7B97</span>
  <span class="token keyword">let</span> maxList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u4ECE\u4E0B\u5F80\u4E0A\u9012\u63A8\uFF0C\u907F\u514D\u91CD\u590D\u8BA1\u7B97</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7EC8\u6B62\u5FAA\u73AF\u6761\u4EF6\uFF0C\u524D\u540E\u4E24\u90E8\u5206\u7ED3\u679C\u662F\u4E00\u81F4\u7684</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8F6E\u8BE2\u6240\u6709\u60C5\u51B5\uFF0C\u6C42\u51FA\u5F53\u524Di\u7684\u6700\u5927\u503C</span>
      max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> maxList<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">*</span> maxList<span class="token punctuation">[</span>i <span class="token operator">-</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    maxList<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> max<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> maxList<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="\u8D2A\u5FC3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3\u5B9E\u73B0" aria-hidden="true">#</a> \u8D2A\u5FC3\u5B9E\u73B0</h4><blockquote><p>\u4E58\u79EF\u6700\u5927\u5373 n &gt;= 5 \u65F6\uFF0C\u5C3D\u53EF\u80FD\u7684\u591A\u7684\u628A\u7EF3\u5B50\u957F\u5EA6\u526A\u4E3A 3\uFF1Bn = 4 \u65F6\uFF0C\u628A\u7EF3\u5B50\u526A\u4E3A\u4E24\u4E2A\u957F\u5EA6\u4E3A 2</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">cuttingRope</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6n\u5206\u4E3A\u51E0\u4E2A3</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u5269\u4F59\u957F\u5EA6\uFF0C\u53EA\u6709 0 \u30011 \u30012 \u4E09\u79CD\u60C5\u51B5</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8868\u793A\u5168\u90E8\u957F\u5EA6\u90FD\u5206\u4E3A3</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8868\u793A\u5269\u4F59\u957F\u5EA6\u4E3A4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> a <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8868\u793A\u5269\u4F59\u957F\u5EA6\u4E3A2</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,11);function d(h,f){const a=p("ExternalLinkIcon");return e(),t(c,null,[k,n("blockquote",null,[n("p",null,[n("a",i,[m,o(a)])])]),b],64)}var x=r(u,[["render",d]]);export{x as default};
