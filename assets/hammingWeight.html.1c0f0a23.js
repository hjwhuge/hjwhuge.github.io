import{r as e,o as p,a as t,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=n("h3",{id:"\u9898\u76EE-\u4F4D-1-\u7684\u4E2A\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u4F4D-1-\u7684\u4E2A\u6570","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u4F4D 1 \u7684\u4E2A\u6570")],-1),k={href:"https://leetcode-cn.com/problems/number-of-1-bits/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode 191"),b=l(`<p>\u9898\u76EE\u63CF\u8FF0</p><p>\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u8F93\u5165\u662F\u4E00\u4E2A\u65E0\u7B26\u53F7\u6574\u6570\uFF08\u4EE5\u4E8C\u8FDB\u5236\u4E32\u7684\u5F62\u5F0F\uFF09\uFF0C\u8FD4\u56DE\u5176\u4E8C\u8FDB\u5236\u8868\u8FBE\u5F0F\u4E2D\u6570\u5B57\u4F4D\u6570\u4E3A &#39;1&#39; \u7684\u4E2A\u6570\uFF08\u4E5F\u88AB\u79F0\u4E3A\u6C49\u660E\u91CD\u91CF\uFF09\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1A<span class="token number">00000000000000000000000000001011</span>
\u8F93\u51FA\uFF1A<span class="token number">3</span>
\u89E3\u91CA\uFF1A\u8F93\u5165\u7684\u4E8C\u8FDB\u5236\u4E32 <span class="token number">00000000000000000000000000001011</span> \u4E2D\uFF0C\u5171\u6709\u4E09\u4F4D\u4E3A <span class="token string">&#39;1&#39;</span>\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u4F4D\u8FD0\u7B97\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u8FD0\u7B97\u5B9E\u73B0" aria-hidden="true">#</a> \u4F4D\u8FD0\u7B97\u5B9E\u73B0</h4><ul><li>\u628A\u8F93\u5165\u6570\u503C\u548C 1 \u5FAA\u73AF\u6BD4\u5BF9\uFF0C\u5982\u679C\u76F8\u4E0E\u4E3A 1\uFF0C\u8BF4\u660E\u5B58\u5728\u4E00\u4E2A 1</li><li>\u65F6\u95F4\u590D\u6742\u5EA6 O(32)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hammingWeight</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u4F4D\u8FD0\u7B97\u4F18\u5316\u7248\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u8FD0\u7B97\u4F18\u5316\u7248\u5B9E\u73B0" aria-hidden="true">#</a> \u4F4D\u8FD0\u7B97\u4F18\u5316\u7248\u5B9E\u73B0</h4><ul><li>\u6267\u884C\u4E00\u6B21 n = n &amp; (n - 1)\u76F8\u5F53\u4E8E\u53BB\u9664\u6389 n \u6700\u540E\u4E00\u4F4D 1 <ul><li>eg\uFF1An = 1100 <ul><li>\u6267\u884C\u7B2C\u4E00\u6B21\uFF1A1100 &amp; 1011 = 1000\uFF1B\u6E05\u9664\u6700\u4F4E\u4F4D 1</li><li>\u6267\u884C\u7B2C\u4E8C\u6B21\uFF1A1000 &amp; 0111 = 0000\uFF1B\u6E05\u9664\u6700\u4F4E\u4F4D 1</li></ul></li></ul></li><li>\u65F6\u95F4\u590D\u6742\u5EA6 O(n \u4E2D 1 \u7684\u4E2A\u6570)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hammingWeight</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token operator">++</span><span class="token punctuation">;</span>
    n <span class="token operator">=</span> n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,11);function m(h,v){const a=e("ExternalLinkIcon");return p(),t(c,null,[u,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),b],64)}var _=r(i,[["render",m]]);export{_ as default};
