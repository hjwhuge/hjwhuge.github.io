import{r as e,o,a as t,b as n,e as p,F as r,d as a,c}from"./app.72349eea.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=n("h3",{id:"\u9898\u76EE-2-\u7684\u5E42",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-2-\u7684\u5E42","aria-hidden":"true"},"#"),a(" \u9898\u76EE - 2 \u7684\u5E42")],-1),d={href:"https://leetcode-cn.com/problems/power-of-two/",target:"_blank",rel:"noopener noreferrer"},k=a("leetcode 231"),b=c(`<h4 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h4><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570 n\uFF0C\u8BF7\u4F60\u5224\u65AD\u8BE5\u6574\u6570\u662F\u5426\u662F 2 \u7684\u5E42\u6B21\u65B9\u3002\u5982\u679C\u662F\uFF0C\u8FD4\u56DE true \uFF1B\u5426\u5219\uFF0C\u8FD4\u56DE false \u3002 \u5982\u679C\u5B58\u5728\u4E00\u4E2A\u6574\u6570 x \u4F7F\u5F97 \xA0n == 2x \uFF0C\u5219\u8BA4\u4E3A n \u662F 2 \u7684\u5E42\u6B21\u65B9\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1An <span class="token operator">=</span> <span class="token number">16</span>
\u8F93\u51FA\uFF1A<span class="token boolean">true</span>
\u89E3\u91CA\uFF1A<span class="token number">24</span> <span class="token operator">=</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u4F4D\u8FD0\u7B97\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u8FD0\u7B97\u5B9E\u73B0" aria-hidden="true">#</a> \u4F4D\u8FD0\u7B97\u5B9E\u73B0</h4><ul><li>2 \u7684\u5E42\u6EE1\u8DB3\uFF0C\u8BE5\u6570\u53EA\u5B58\u5728\u4E00\u4E2A\u4E8C\u8FDB\u5236 1</li><li>\u6D88\u9664\u6389\u4E00\u4E2A\u4E8C\u8FDB\u5236 1 \u4E4B\u540E\uFF0C\u8BE5\u6570\u4E3A 0 \u8BF4\u660E\u662F 2 \u7684\u5E42\uFF0C\u5426\u5219\u4E0D\u662F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isPowerOfTwo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,8);function h(m,f){const s=e("ExternalLinkIcon");return o(),t(r,null,[u,n("blockquote",null,[n("p",null,[n("a",d,[k,p(s)])])]),b],64)}var x=l(i,[["render",h]]);export{x as default};
