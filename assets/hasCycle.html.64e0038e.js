import{r as e,o as p,a as t,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h3",{id:"\u9898\u76EE-\u68C0\u6D4B\u94FE\u8868\u4E2D\u662F\u5426\u6709\u73AF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u68C0\u6D4B\u94FE\u8868\u4E2D\u662F\u5426\u6709\u73AF","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u68C0\u6D4B\u94FE\u8868\u4E2D\u662F\u5426\u6709\u73AF")],-1),k={href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode 141"),b=l(`<p>\u7ED9\u4F60\u4E00\u4E2A\u94FE\u8868\u7684\u5934\u7ED3\u70B9 head \uFF0C\u5224\u65AD\u94FE\u8868\u4E2D\u662F\u5426\u6709\u73AF\u3002</p><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><ul><li>\u601D\u8DEF\u4E00\uFF1A\u5229\u7528 set \u6570\u636E\u7ED3\u6784\uFF0C\u904D\u5386\u94FE\u8868\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u4E8E set \u4E2D\uFF0C\u7EE7\u7EED\u904D\u5386\u5E76\u628A\u5F53\u524D\u7ED3\u70B9\u5B58\u5165 set</li><li>\u601D\u8DEF\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488\uFF0C\u5FEB\u6307\u9488\u8D70\u4E24\u6B65\uFF0C\u6162\u6307\u9488\u8D70\u4E00\u6B65\uFF0C\u5FAA\u73AF\u7ED3\u675F\u6761\u4EF6-\u5FEB\u6162\u6307\u9488\u90FD\u8D70\u5B8C\uFF0C\u5224\u65AD\u5FEB\u6162\u6307\u9488\u662F\u5426\u76F8\u9047</li></ul><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="set-\u5224\u91CD" tabindex="-1"><a class="header-anchor" href="#set-\u5224\u91CD" aria-hidden="true">#</a> set \u5224\u91CD</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hasCycle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
      head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="\u5FEB\u6162\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u6162\u6307\u9488" aria-hidden="true">#</a> \u5FEB\u6162\u6307\u9488</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hasCycle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">let</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>slow <span class="token operator">&amp;&amp;</span> fast <span class="token operator">&amp;&amp;</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>slow <span class="token operator">===</span> fast<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,8);function h(m,f){const a=e("ExternalLinkIcon");return p(),t(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),b],64)}var _=r(u,[["render",h]]);export{_ as default};
