import{r as p,o as t,a as o,b as n,e,F as c,d as s,c as u}from"./app.72349eea.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=n("h3",{id:"\u9898\u76EE-\u8FD4\u56DE\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u8FD4\u56DE\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u8FD4\u56DE\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C")],-1),k={href:"https://leetcode-cn.com/problems/sliding-window-maximum/",target:"_blank",rel:"noopener noreferrer"},m=s("leetcode 239"),b=u(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums\uFF0C\u6709\u4E00\u4E2A\u5927\u5C0F\u4E3A \xA0k\xA0 \u7684\u6ED1\u52A8\u7A97\u53E3\u4ECE\u6570\u7EC4\u7684\u6700\u5DE6\u4FA7\u79FB\u52A8\u5230\u6570\u7EC4\u7684\u6700\u53F3\u4FA7\u3002\u4F60\u53EA\u53EF\u4EE5\u770B\u5230\u5728\u6ED1\u52A8\u7A97\u53E3\u5185\u7684 k\xA0 \u4E2A\u6570\u5B57\u3002\u6ED1\u52A8\u7A97\u53E3\u6BCF\u6B21\u53EA\u5411\u53F3\u79FB\u52A8\u4E00\u4F4D\u3002</p><p>\u8FD4\u56DE \u6ED1\u52A8\u7A97\u53E3\u4E2D\u7684\u6700\u5927\u503C \u3002</p><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u53CC\u7AEF\u961F\u5217\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u53CC\u7AEF\u961F\u5217\u5B9E\u73B0" aria-hidden="true">#</a> \u53CC\u7AEF\u961F\u5217\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxSlidingWindow</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> q <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>q<span class="token punctuation">[</span>q<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> k<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>q<span class="token punctuation">[</span>q<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5220\u9664\u8D8A\u754C\u4E0B\u6807</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> i <span class="token operator">-</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      q<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,6);function d(h,f){const a=p("ExternalLinkIcon");return t(),o(c,null,[r,n("blockquote",null,[n("p",null,[n("a",k,[m,e(a)])])]),b],64)}var g=l(i,[["render",d]]);export{g as default};
