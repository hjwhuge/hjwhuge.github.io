import{r as e,o as p,a as t,b as n,e as o,F as r,d as s,c}from"./app.72349eea.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h3",{id:"\u9898\u76EE-\u8DF3\u53F0\u9636",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u8DF3\u53F0\u9636","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u8DF3\u53F0\u9636")],-1),k={href:"https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode \u5251\u6307 offer 10"),b=c(`<h4 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h4><p>\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A 1 \u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A 2 \u7EA7\u53F0\u9636\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2A n \u7EA7\u7684\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\uFF1F</p><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><p>\u8FD9\u91CC\u5176\u5B9E\u5C31\u662F\u6590\u6CE2\u90A3\u5951\u6570\u5217\uFF0C\u7B2C\u4E00\u9636\u6709 1 \u79CD\u8D70\u6CD5\uFF0C\u7B2C\u4E8C\u9636\u6709 2 \u79CD\u8D70\u6CD5\uFF0C\u7B2C\u4E09\u9636\u6709 3 \u79CD\u8D70\u6CD5\uFF0C\u7B2C\u56DB\u9636\u6709 5 \u79CD\u8D70\u6CD5\uFF0C\u7B2C\u4E94\u9636\u6709 8 \u79CD\u8D70\u6CD5\uFF0C\u8FD9\u4E2A\u8D70\u6CD5\u7684\u89C4\u5F8B\u6B63\u597D\u7B26\u5408\u6590\u6CE2\u90A3\u5951\u6570\u5217 1(\u8FD9\u4E2A 1 \u5728\u6B64\u4F8B\u5B50\u7701\u7565\u4E86)\u30011\u30012\u30013\u30015\u30018\u300113\u300121....\u4E0D\u7BA1\u54EA\u4E2A\u6570\u90FD\u662F\u524D\u4E24\u4E2A\u6570\u7684\u548C\uFF0C\u90A3\u4E48\u7B2C n \u4E2A\u6570\u5C31\u7B49\u4E8E\u7B2C n-1 \u4F4D\u7F6E\u7684\u6570\u52A0\u4E0A\u7B2C n-2 \u4F4D\u7F6E\u7684\u6570\u4E5F\u5C31\u662F F(n) = F(n-1) + F(n-2)\u3002</p><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u9012\u5F52\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u7248\u672C" aria-hidden="true">#</a> \u9012\u5F52\u7248\u672C</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">jumpFloor</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> n <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> n<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">jumpFloor</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">jumpFloor</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="\u5FAA\u73AF\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF\u89E3\u6CD5" aria-hidden="true">#</a> \u5FAA\u73AF\u89E3\u6CD5</h4><p>\u4ECE\u4E0B\u5F80\u4E0A\u8BA1\u7B97</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> current <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">++</span> <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> pre <span class="token operator">+</span> current<span class="token punctuation">;</span>
    <span class="token comment">// leetcode \u89E3\u9898\u9700\u8981\u5BF9result\u53D6\u6A21</span>
    <span class="token comment">// result = (pre + current) % 1000000007;</span>
    pre <span class="token operator">=</span> current<span class="token punctuation">;</span>
    current <span class="token operator">=</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,10);function m(h,f){const a=e("ExternalLinkIcon");return p(),t(r,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),b],64)}var v=l(u,[["render",m]]);export{v as default};
