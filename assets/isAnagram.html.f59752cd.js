import{r as p,o as t,a as e,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=n("h3",{id:"\u9898\u76EE-\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD")],-1),k={href:"https://leetcode-cn.com/problems/valid-anagram/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode 242"),m=l(`<p>\u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32 s \u548C t \uFF0C\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u5224\u65AD t \u662F\u5426\u662F s \u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u3002</p><p>\u6CE8\u610F\uFF1A\u82E5 \xA0s \u548C t\xA0 \u4E2D\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u90FD\u76F8\u540C\uFF0C\u5219\u79F0 \xA0s \u548C t\xA0 \u4E92\u4E3A\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u3002</p><p>\u793A\u4F8B \xA01:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token string">&quot;anagram&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token string">&quot;nagaram&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u793A\u4F8B 2:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">\u8F93\u5165</span><span class="token operator">:</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token string">&quot;rat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token string">&quot;car&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token literal-property property">\u8F93\u51FA</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h4><p>\u65B9\u6CD5\u4E00\uFF1A\u6392\u5E8F</p><ul><li>\u5B57\u7B26\u4E32\u8F6C\u6570\u7EC4</li><li>\u6570\u7EC4\u6392\u5E8F</li><li>\u6570\u7EC4\u4E3A\u5B57\u7B26\u4E32\u6BD4\u8F83\u662F\u5426\u76F8\u7B49</li></ul><p>\u65B9\u6CD5\u4E8C\uFF1A\u54C8\u5E0C\u8868</p><ul><li>\u91C7\u7528 map \u6765\u8BA1\u6570</li><li>\u5FAA\u73AF s \u8BA1\u6570 + 1\uFF0C\u5FAA\u73AF t \u8BA1\u6570 - 1\uFF0C\u6700\u540E\u5224\u65AD map \u662F\u5426\u4E3A\u7A7A</li></ul><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u6392\u5E8F\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u5B9E\u73B0" aria-hidden="true">#</a> \u6392\u5E8F\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isAnagram</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> t<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="\u54C8\u5E0C\u8868\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u8868\u5B9E\u73B0" aria-hidden="true">#</a> \u54C8\u5E0C\u8868\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isAnagram</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> idx <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
      idx <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> m<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">:</span> m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> idx <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> m<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,16);function b(h,f){const a=p("ExternalLinkIcon");return t(),e(c,null,[r,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),m],64)}var y=u(i,[["render",b]]);export{y as default};
