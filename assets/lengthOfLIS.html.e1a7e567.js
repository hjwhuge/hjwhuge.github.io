import{r as p,o as t,a as e,b as n,e as o,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h3",{id:"\u9898\u76EE-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217","aria-hidden":"true"},"#"),s(" \u9898\u76EE - \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217")],-1),k={href:"https://leetcode-cn.com/problems/longest-increasing-subsequence/",target:"_blank",rel:"noopener noreferrer"},d=s("leetcode 300"),m=l(`<h4 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h4><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \uFF0C\u627E\u5230\u5176\u4E2D\u6700\u957F\u4E25\u683C\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u3002</p><p>\u5B50\u5E8F\u5217 \xA0 \u662F\u7531\u6570\u7EC4\u6D3E\u751F\u800C\u6765\u7684\u5E8F\u5217\uFF0C\u5220\u9664\uFF08\u6216\u4E0D\u5220\u9664\uFF09\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u800C\u4E0D\u6539\u53D8\u5176\u4F59\u5143\u7D20\u7684\u987A\u5E8F\u3002\u4F8B\u5982\uFF0C[3,6,2,7] \u662F\u6570\u7EC4 [0,3,1,6,2,2,7] \u7684\u5B50\u5E8F\u5217\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1Anums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token number">4</span>
\u89E3\u91CA\uFF1A\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u662F <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">]</span>\uFF0C\u56E0\u6B64\u957F\u5EA6\u4E3A <span class="token number">4</span> \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u52A8\u6001\u89C4\u5212\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212\u5B9E\u73B0" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\u5B9E\u73B0</h4><ul><li>\u72B6\u6001\u5B9A\u4E49\uFF1Adp[i] <ul><li>\u521D\u59CB\u6BCF\u4E2A\u503C\u7684 LIS \u90FD\u4E3A 1</li></ul></li><li>\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF1Aopt[n] = Math.max(dp[i], dp[j] + 1); <ul><li>\u5982\u679C\u5F53\u524D\u503C\u6BD4\u524D\u9762\u67D0\u4E00\u4E2A\u66F4\u5927\uFF0C\u5219\u5F53\u524D\u503C\u7684 LIS \u4E3A \u524D\u9762\u503C\u7684 LIS + 1</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lengthOfLIS</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> m <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> m<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u8BC1\u53D6\u5230\u7684LIS\u662F\u6700\u5927\u7684</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u66F4\u65B0\u7ED3\u679C</span>
    res <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="\u4E8C\u5206\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u5B9E\u73B0" aria-hidden="true">#</a> \u4E8C\u5206\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lengthOfLIS</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,11);function b(h,f){const a=p("ExternalLinkIcon");return t(),e(c,null,[i,n("blockquote",null,[n("p",null,[n("a",k,[d,o(a)])])]),m],64)}var _=u(r,[["render",b]]);export{_ as default};
