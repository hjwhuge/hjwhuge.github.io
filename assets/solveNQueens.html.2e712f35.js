import{r as p,o as t,a as o,b as n,e,F as c,d as s,c as l}from"./app.72349eea.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=n("h3",{id:"\u9898\u76EE-n-\u7687\u540E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE-n-\u7687\u540E","aria-hidden":"true"},"#"),s(" \u9898\u76EE - N \u7687\u540E")],-1),i={href:"https://leetcode-cn.com/problems/n-queens/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode 51"),m=l(`<h4 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h4><p>n\xA0 \u7687\u540E\u95EE\u9898 \u7814\u7A76\u7684\u662F\u5982\u4F55\u5C06 n\xA0 \u4E2A\u7687\u540E\u653E\u7F6E\u5728 n\xD7n \u7684\u68CB\u76D8\u4E0A\uFF0C\u5E76\u4E14\u4F7F\u7687\u540E\u5F7C\u6B64\u4E4B\u95F4\u4E0D\u80FD\u76F8\u4E92\u653B\u51FB\u3002</p><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570 n \uFF0C\u8FD4\u56DE\u6240\u6709\u4E0D\u540C\u7684 \xA0n\xA0 \u7687\u540E\u95EE\u9898 \u7684\u89E3\u51B3\u65B9\u6848\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u8F93\u5165\uFF1An <span class="token operator">=</span> <span class="token number">4</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;.Q..&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;...Q&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Q...&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;..Q.&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;..Q.&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Q...&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;...Q&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;.Q..&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
\u89E3\u91CA\uFF1A<span class="token number">4</span> \u7687\u540E\u95EE\u9898\u5B58\u5728\u4E24\u4E2A\u4E0D\u540C\u7684\u89E3\u6CD5\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><h4 id="\u56DE\u6EAF\u601D\u60F3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6EAF\u601D\u60F3\u5B9E\u73B0" aria-hidden="true">#</a> \u56DE\u6EAF\u601D\u60F3\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u5168\u5C40\u53D8\u91CF,\u4E0B\u6807\u8868\u793A\u884C,\u503C\u8868\u793AQ\u5B58\u50A8\u5728\u54EA\u4E00\u5217</span>
<span class="token keyword">let</span> solutions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u6700\u7EC8\u8F93\u51FA\u7ED3\u679C</span>
<span class="token keyword">var</span> <span class="token function-variable function">solveNQueens</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  solutions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> solutions<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u56DE\u6EAF</span>
<span class="token keyword">function</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token parameter">row<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">===</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// n\u4E2A\u68CB\u5B50\u90FD\u653E\u7F6E\u597D\u4E86\uFF0C\u6253\u5370\u7ED3\u679C</span>
    <span class="token function">printQueens</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// n\u884C\u68CB\u5B50\u90FD\u653E\u597D\u4E86\uFF0C\u5DF2\u7ECF\u6CA1\u6CD5\u518D\u5F80\u4E0B\u9012\u5F52\u4E86\uFF0C\u6240\u4EE5\u5C31return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> column <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> column <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> column<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BCF\u4E00\u884C\u90FD\u6709n\u79CD\u653E\u6CD5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isOk</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> column<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6709\u4E9B\u653E\u6CD5\u4E0D\u6EE1\u8DB3\u8981\u6C42</span>
      result<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">=</span> column<span class="token punctuation">;</span> <span class="token comment">// \u7B2Crow\u884C\u7684\u68CB\u5B50\u653E\u5230\u4E86column\u5217</span>
      <span class="token function">backtrack</span><span class="token punctuation">(</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8003\u5BDF\u4E0B\u4E00\u884C</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65ADrow\u884Ccolumn\u5217\u662F\u5426\u53EF\u4EE5\u653E\u7F6E\u7687\u540E</span>
<span class="token comment">//\u5373\u4F7F\u5176\u4E2D\u4EFB\u610F\u4E24\u4E2A\u7687\u540E\u90FD\u4E0D\u540C\u5217\u3001\u540C\u884C\u548C\u5728\u4E00\u6761\u659C\u7EBF\u4E0A</span>
<span class="token keyword">function</span> <span class="token function">isOk</span><span class="token punctuation">(</span><span class="token parameter">row<span class="token punctuation">,</span> column<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5DE6\u4E0A\u5BF9\u89D2\u7EBF\u548C\u53F3\u4E0A\u5BF9\u89D2\u7EBF\u4E0A\u7684\u7684\u503C</span>
  <span class="token keyword">let</span> leftup <span class="token operator">=</span> column <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> rightup <span class="token operator">=</span> column <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679Cresult[i] === column\u8BF4\u660E\u8BE5\u4F4D\u7F6E\u5B58\u5728\u7687\u540E</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> row <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9010\u884C\u5F80\u4E0A\u8003\u5BDF\u6BCF\u4E00\u884C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> column<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u8868\u793A\u7B2Ci\u884C\u7684column\u5217\u6709\u68CB\u5B50</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftup <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8003\u5BDF\u5DE6\u4E0A\u5BF9\u89D2\u7EBF\uFF1A\u7B2Ci\u884Cleftup\u5217\u6709\u68CB\u5B50\u5417\uFF1F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> leftup<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rightup <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8003\u5BDF\u53F3\u4E0A\u5BF9\u89D2\u7EBF\uFF1A\u7B2Ci\u884Crightup\u5217\u6709\u68CB\u5B50\u5417\uFF1F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> rightup<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    leftup<span class="token operator">--</span><span class="token punctuation">;</span>
    rightup<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6253\u5370\u51FA\u4E00\u4E2A\u4E8C\u7EF4\u77E9\u9635</span>
<span class="token keyword">function</span> <span class="token function">printQueens</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> column <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> column <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> column<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">==</span> column<span class="token punctuation">)</span> str <span class="token operator">+=</span> <span class="token string">&quot;Q&quot;</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> str <span class="token operator">+=</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  solutions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h4 id="\u4F4D\u8FD0\u7B97\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u8FD0\u7B97\u5B9E\u73B0" aria-hidden="true">#</a> \u4F4D\u8FD0\u7B97\u5B9E\u73B0</h4><p>\u53EF\u4EE5\u53C2\u8003 52 \u9898\u5B9E\u73B0</p>`,10);function d(f,w){const a=p("ExternalLinkIcon");return t(),o(c,null,[k,n("blockquote",null,[n("p",null,[n("a",i,[b,e(a)])])]),m],64)}var g=u(r,[["render",d]]);export{g as default};
